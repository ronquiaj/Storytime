[{"/Volumes/NEO Storage/storytime/src/index.js":"1","/Volumes/NEO Storage/storytime/src/components/Home.js":"2","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js":"3","/Volumes/NEO Storage/storytime/src/components/App.js":"4","/Volumes/NEO Storage/storytime/src/hooks/useForm.js":"5","/Volumes/NEO Storage/storytime/src/components/AppNav.js":"6","/Volumes/NEO Storage/storytime/src/components/Error.js":"7","/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js":"8","/Volumes/NEO Storage/storytime/src/components/Login.js":"9","/Volumes/NEO Storage/storytime/src/components/Signup.js":"10","/Volumes/NEO Storage/storytime/src/components/Story.js":"11","/Volumes/NEO Storage/storytime/src/components/Post.js":"12","/Volumes/NEO Storage/storytime/src/components/Spinner.js":"13","/Volumes/NEO Storage/storytime/src/components/User.js":"14","/Volumes/NEO Storage/storytime/src/components/UserDisplay.js":"15","/Volumes/NEO Storage/storytime/src/components/EditUser.js":"16"},{"size":348,"mtime":1608348905480,"results":"17","hashOfConfig":"18"},{"size":3865,"mtime":1609388521040,"results":"19","hashOfConfig":"18"},{"size":718,"mtime":1609300728520,"results":"20","hashOfConfig":"18"},{"size":1138,"mtime":1609388647090,"results":"21","hashOfConfig":"18"},{"size":358,"mtime":1609307043770,"results":"22","hashOfConfig":"18"},{"size":2947,"mtime":1609390017770,"results":"23","hashOfConfig":"18"},{"size":376,"mtime":1608847129830,"results":"24","hashOfConfig":"18"},{"size":664,"mtime":1608767565710,"results":"25","hashOfConfig":"18"},{"size":2658,"mtime":1609093395440,"results":"26","hashOfConfig":"18"},{"size":6048,"mtime":1609384342130,"results":"27","hashOfConfig":"18"},{"size":4906,"mtime":1609093974610,"results":"28","hashOfConfig":"18"},{"size":2118,"mtime":1609119640350,"results":"29","hashOfConfig":"18"},{"size":2582,"mtime":1609118431570,"results":"30","hashOfConfig":"18"},{"size":1208,"mtime":1609307617310,"results":"31","hashOfConfig":"18"},{"size":738,"mtime":1609305694510,"results":"32","hashOfConfig":"18"},{"size":4050,"mtime":1609390480090,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"y0gnho",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/NEO Storage/storytime/src/index.js",[],["73","74"],"/Volumes/NEO Storage/storytime/src/components/Home.js",["75"],"/Volumes/NEO Storage/storytime/src/firebase/Firebase.js",[],"/Volumes/NEO Storage/storytime/src/components/App.js",[],"/Volumes/NEO Storage/storytime/src/hooks/useForm.js",["76"],"import { useState } from 'react';\n\nexport default function useForm(inputVal) {\n    const [val, changeVal] = useState(inputVal);\n\n    const setVal = e => {\n        changeVal(e.target.value);\n    }\n\n    const reset = () => {\n        changeVal(\"\");\n    }\n\n    const setValNoE = input => {\n        changeVal(input);\n    }\n\n    return [val, setVal, setValNoE];\n}\n","/Volumes/NEO Storage/storytime/src/components/AppNav.js",[],"/Volumes/NEO Storage/storytime/src/components/Error.js",[],"/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js",[],"/Volumes/NEO Storage/storytime/src/components/Login.js",["77"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase/Firebase';\nimport { Card, Button, Form, Alert, Container } from 'react-bootstrap';\nimport useForm from '../hooks/useForm';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\n\nexport default function Signin() {\n    const [emailRef, changeEmailRef] = useForm(\"\");\n    const [passwordRef, changePasswordRef] = useForm(\"\");\n    const {user, updateUser} = useContext(AuthenticatedContext);\n    const [alert, changeAlert] = useState(\"\");\n    const history = useHistory();\n    const handleClick = e => {\n        e.preventDefault();\n            auth.signInWithEmailAndPassword(emailRef, passwordRef).then(() => {\n                const currentUser = auth.currentUser;\n                updateUser(currentUser);\n                history.push('/');\n                console.log(\"Successfully signed back in\");\n            }).catch(() => {\n                changeAlert(\"Invalid password\")\n            });   \n\n    };\n\n    // Used to prevent signed in user from accessing this page\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [user]);\n\n    return (\n        <Container style={{maxWidth: \"70vh\", marginTop: \"4rem\"}}>\n         {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log in</h2>\n                    <Form onSubmit={handleClick}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control value={emailRef} onChange={changeEmailRef} type=\"email\" required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control value={passwordRef} onChange={changePasswordRef} type=\"password\" required />\n                        </Form.Group>\n                        <Button className=\"w-100\" type=\"submit\">Log in</Button>\n                        <Form.Group style={{marginTop: \"2rem\", textAlign: \"center\" }}>\n                            <Form.Label>Don't have an account? <Link to=\"/signup\">Sign up</Link></Form.Label>\n                        </Form.Group>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n            </div>\n        </Container>\n    )\n}\n","/Volumes/NEO Storage/storytime/src/components/Signup.js",["78"],"/Volumes/NEO Storage/storytime/src/components/Story.js",["79"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { useEffect, useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport { db } from '../firebase/Firebase';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport useForm from '../hooks/useForm';\nimport Post from './Post';\nimport Spinner from './Spinner';\n\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    title: {\n        margin: \"2rem 0\",\n        textAlign: \"center\",\n    },\n    '@global': {\n        '.effect7': {\n            display: \"flex\",\n            width: \"100vh\",\n            height: \"20rem\",\n            position: 'relative',\n            webkitBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            mozBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            boxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            padding: \"1rem\"\n            }\n    },\n    text: {\n        width: \"100%\",\n        height: \"100%\",\n        background: \"rgba(0, 0, 0, 0)\",\n        border: \"none\",\n        resize: \"none\",\n        color: \"black\",\n    },  \n    post: {\n        margin: \"2.5rem 0\"\n    },\n    postContainer: {\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n        marginTop: \"2rem\"\n    },\n    '@media (max-width: 748px)': {\n        '@global': {\n            '.effect7': {\n                display: \"flex\",\n                width: \"48vh\",\n                }\n    }\n}\n}\n\n\n\nfunction Story(props) {\n    const history = useHistory();\n    const { title } = props.match.params;\n    const { classes } = props;\n    const { user } = useContext(AuthenticatedContext);\n    const [ loading, changeLoading ] = useState(true);\n    const [ displayText, changeText ] = useState(\"\");\n    const [ posts, changePosts ] = useState([]);\n    const [ postAdded, changePostAdded ] = useState(false);\n    const [ newPost, changeNewPost ] = useForm(\"\");\n\n    // Click handler for adding a new post to the story\n    const handleClick = async e => {\n        if (user) {\n            e.preventDefault();\n            const storyRef = db.collection('stories').doc(title);\n            const post = {\n                owner: {\n                    photoURL: user.photoURL,   \n                    username: user.displayName\n                },\n                text: newPost,\n                votes: 0\n            }\n            await storyRef.update({\n                posts: firebase.firestore.FieldValue.arrayUnion(post)\n            }).then(() => {console.log(\"Post successfully added!\"); changePostAdded(true)}).catch(err => console.log(err));\n        } else history.push('/signup')\n       \n    }\n\n\n    // Useeffect for fetching story and post data\n    useEffect(() => {\n        const fetchData = async () => {\n            const storyRef = db.collection('stories').doc(title);\n            const storyData = await storyRef.get();\n            if (storyData.exists) {\n                const { posts, text } = storyData.data();\n                changeLoading(false);\n                // Get all the posts from the database for this particular story\n                if (posts.length > 0) {\n                    const newPosts = posts.map(post => <Post {...post} />);\n                    changePosts(newPosts);\n                }\n                changeText(text);\n                changePostAdded(false);\n            } else history.push(\"/error\");\n        };\n        fetchData();\n    }, [postAdded]);\n\n    return (\n        <>\n             <Container className={classes.container}>\n            {loading ? \n            <Spinner />\n            :\n                <>\n                <div>\n                    <h1 className={classes.title}>{title}</h1>\n                    \n                    <div className=\"box effect7\">\n                        <textarea disabled=\"yes\" className={classes.text} value={displayText}/>\n                    </div>\n                </div>\n                \n                <ul className={classes.postContainer}>\n                    {posts}\n                </ul>\n\n                <Form onSubmit={handleClick} className={classes.post}>\n                            <Form.Group>\n                                <Form.Label>New post</Form.Label>\n                                <Form.Control maxLength=\"90\" value={newPost} onChange={changeNewPost} type=\"text\" required />\n                            </Form.Group>\n                            <Button className=\"w-100\" type=\"submit\">Post</Button>\n                </Form>\n                </>\n            }\n             </Container>\n        \n        </>\n    )\n}\n\nexport default withStyles(styles)(Story);\n","/Volumes/NEO Storage/storytime/src/components/Post.js",["80"],"import { withStyles } from '@material-ui/core';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        width: \"100%\",\n        height: \"8rem\",\n        margin: \"0.7rem 0\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        webkitBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        mozBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        boxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\"\n    },\n    user: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"25%\",\n        margin: \"1rem auto 0 0\"\n    },\n    image: {\n        width: \"5.5rem\", \n        height: \"5rem\"\n    },\n    text: {\n        fontSize: \"1.5rem\",\n        width: \"100%\"\n    },\n    arrow: {\n        display: \"flex\",\n        margin: \"0 0.5rem\",\n        fontSize: \"1.5rem\",\n    },\n    arrowContainer: {\n        marginLeft: \"8rem\",\n        display: \"flex\"\n    },\n    '@media (max-width: 1024px)': {\n        text: {\n            fontSize: \"0.84rem\"\n        },\n        arrowContainer: {\n            marginLeft: \"0\"\n        }\n}\n}\n\nfunction Post(props) {\n    const { classes, text, votes } = props;\n    const { photoURL, username } = props.owner;\n\n    return (\n        <Row className={classes.container}>\n            <Col>\n                <div className={classes.user}>\n                    <img className={classes.image} src={photoURL}/>\n                    <Link to={`/users/${username}`}><h4 style={{fontSize: \"0.7rem\"}}>{username}</h4></Link>\n                </div>\n            </Col>\n            <Col>\n                <h4 className={classes.text}>{text}</h4>\n            </Col>\n            <Col>\n                <div className={classes.arrowContainer}> \n                    <i className={`fas fa-arrow-up ${classes.arrow}`}></i>\n                    {votes}\n                    <i className={`fas fa-arrow-down ${classes.arrow}`}></i>\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nexport default withStyles(styles)(Post);","/Volumes/NEO Storage/storytime/src/components/Spinner.js",[],"/Volumes/NEO Storage/storytime/src/components/User.js",["81","82","83"],"import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { db } from '../firebase/Firebase';\nimport { } from 'react-bootstrap';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport Spinner from './Spinner';\nimport UserDisplay from './UserDisplay';\n\nfunction User(props) {\n    const { user } = props.match.params;\n    const history = useHistory();\n    const { currentUser, updateUser } = useContext(AuthenticatedContext);\n    const [ userData, changeUserData ] = useState(null);\n    const [ pageLoaded, changePageLoaded ] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const userInfoRef = db.collection('users').doc(user);\n            const userInfo = await userInfoRef.get();\n            if (userInfo.exists) {\n                changeUserData(userInfo.data());\n            } else history.push('/error');\n        };\n        fetchData();\n        changePageLoaded(true);\n    }, []);\n\n    return (\n        <div>\n            {pageLoaded ? \n            <UserDisplay {...userData}/>\n            :\n            <Spinner />\n        }\n            \n        </div>\n    )\n}\n\nexport default User;","/Volumes/NEO Storage/storytime/src/components/UserDisplay.js",["84"],"import { withStyles } from '@material-ui/core';\nimport { Container } from 'react-bootstrap';\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        marginTop: \"2rem\",\n        width: \"100vw\"\n    },\n    profilePicture: {\n        width: \"50%\",\n        margin: \"auto\"\n    }\n};\n\nfunction UserDisplay(props) {\n    const { classes, displayName, photoURL, bio} = props;\n    \n    return (\n        <Container className={classes.container}>\n            <h1>{displayName}</h1>\n            <img className={classes.profilePicture} src={photoURL}/>\n            {bio}\n        </Container>\n    )\n}\n\nexport default withStyles(styles)(UserDisplay);","/Volumes/NEO Storage/storytime/src/components/EditUser.js",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":86,"column":6,"nodeType":"93","endLine":86,"endColumn":18,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":10,"column":11,"nodeType":"97","messageId":"98","endLine":10,"endColumn":16},{"ruleId":"91","severity":1,"message":"99","line":33,"column":8,"nodeType":"93","endLine":33,"endColumn":14,"suggestions":"100"},{"ruleId":"91","severity":1,"message":"99","line":24,"column":8,"nodeType":"93","endLine":24,"endColumn":14,"suggestions":"101"},{"ruleId":"91","severity":1,"message":"102","line":116,"column":8,"nodeType":"93","endLine":116,"endColumn":19,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":60,"column":21,"nodeType":"106","endLine":60,"endColumn":68},{"ruleId":"95","severity":1,"message":"107","line":12,"column":13,"nodeType":"97","messageId":"98","endLine":12,"endColumn":24},{"ruleId":"95","severity":1,"message":"108","line":12,"column":26,"nodeType":"97","messageId":"98","endLine":12,"endColumn":36},{"ruleId":"91","severity":1,"message":"109","line":26,"column":8,"nodeType":"93","endLine":26,"endColumn":10,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":25,"column":13,"nodeType":"106","endLine":25,"endColumn":69},{"ruleId":"91","severity":1,"message":"111","line":65,"column":8,"nodeType":"93","endLine":65,"endColumn":14,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"105","line":96,"column":17,"nodeType":"106","endLine":96,"endColumn":46},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.storyCard' and 'classes.titleLink'. Either include them or remove the dependency array.","ArrayExpression",["115"],"no-unused-vars","'reset' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["116"],["117"],"React Hook useEffect has missing dependencies: 'history' and 'title'. Either include them or remove the dependency array.",["118"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'currentUser' is assigned a value but never used.","'updateUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'history', 'initialBioRef', and 'pageUser'. Either include them or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"123","fix":"125"},{"desc":"126","fix":"127"},{"desc":"123","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [classes.storyCard, classes.titleLink, storyAdded]",{"range":"131","text":"132"},"Update the dependencies array to be: [history, user]",{"range":"133","text":"134"},{"range":"135","text":"134"},"Update the dependencies array to be: [history, postAdded, title]",{"range":"136","text":"137"},{"range":"138","text":"134"},"Update the dependencies array to be: [history, initialBioRef, pageUser, user]",{"range":"139","text":"140"},[2879,2891],"[classes.storyCard, classes.titleLink, storyAdded]",[1260,1266],"[history, user]",[1077,1083],[3722,3733],"[history, postAdded, title]",[1002,1004],[2171,2177],"[history, initialBioRef, pageUser, user]"]