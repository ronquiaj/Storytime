[{"/Volumes/NEO Storage/storytime/src/index.js":"1","/Volumes/NEO Storage/storytime/src/components/Home.js":"2","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js":"3","/Volumes/NEO Storage/storytime/src/components/App.js":"4","/Volumes/NEO Storage/storytime/src/hooks/useForm.js":"5","/Volumes/NEO Storage/storytime/src/components/AppNav.js":"6","/Volumes/NEO Storage/storytime/src/components/Error.js":"7","/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js":"8","/Volumes/NEO Storage/storytime/src/components/Login.js":"9","/Volumes/NEO Storage/storytime/src/components/Signup.js":"10","/Volumes/NEO Storage/storytime/src/components/Story.js":"11","/Volumes/NEO Storage/storytime/src/components/Post.js":"12","/Volumes/NEO Storage/storytime/src/components/Spinner.js":"13","/Volumes/NEO Storage/storytime/src/components/User.js":"14","/Volumes/NEO Storage/storytime/src/components/UserDisplay.js":"15"},{"size":348,"mtime":1608348905480,"results":"16","hashOfConfig":"17"},{"size":3587,"mtime":1609093992330,"results":"18","hashOfConfig":"17"},{"size":639,"mtime":1608768084530,"results":"19","hashOfConfig":"17"},{"size":995,"mtime":1609120507790,"results":"20","hashOfConfig":"17"},{"size":409,"mtime":1609137774720,"results":"21","hashOfConfig":"17"},{"size":2448,"mtime":1609118075140,"results":"22","hashOfConfig":"17"},{"size":376,"mtime":1608847129830,"results":"23","hashOfConfig":"17"},{"size":664,"mtime":1608767565710,"results":"24","hashOfConfig":"17"},{"size":2658,"mtime":1609093395440,"results":"25","hashOfConfig":"17"},{"size":5419,"mtime":1609139336380,"results":"26","hashOfConfig":"17"},{"size":4906,"mtime":1609093974610,"results":"27","hashOfConfig":"17"},{"size":2118,"mtime":1609119640350,"results":"28","hashOfConfig":"17"},{"size":2582,"mtime":1609118431570,"results":"29","hashOfConfig":"17"},{"size":1208,"mtime":1609121425080,"results":"30","hashOfConfig":"17"},{"size":776,"mtime":1609133585990,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"y0gnho",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/NEO Storage/storytime/src/index.js",[],["69","70"],"/Volumes/NEO Storage/storytime/src/components/Home.js",["71"],"import { db } from '../firebase/Firebase';\nimport { useState, useEffect, useContext } from 'react';\nimport useForm from '../hooks/useForm'; \nimport { withStyles } from '@material-ui/core';\nimport { Card, Button, Form, Container, Row, Col, Alert } from 'react-bootstrap'; \nimport { Link, useHistory } from 'react-router-dom';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport Spinner from './Spinner';\n\nconst styles = {\n  storyCard: {\n    width: \"25rem\",\n    margin: \"3rem 1rem\"\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleLink: {\n    color: \"white\"\n  }\n}\n\nfunction Home(props) {\n  const history = useHistory();\n  const { classes } = props;\n  const [ titleRef, changeTitleRef ] = useForm(\"\");\n  const [ textRef, changeTextRef ] = useForm(\"\");\n  const [ alert, changeAlert ] = useState(\"\");\n  const [ stories, changeStories ] = useState([]);\n  const [ storyAdded, changeStoryAdded ] = useState(false);\n  const [ loading, changeLoading ] = useState(true);\n  const { user } = useContext(AuthenticatedContext);\n\n  const handleSubmit = async e => {\n    if (user) {\n      e.preventDefault();\n      const storiesRef = await db.collection('stories').doc(titleRef).get(); // Fetch the data for storiesref\n      if (!storiesRef.exists) { \n        await db.collection('stories').doc(titleRef).set({\n          title: titleRef,\n          text: textRef,\n          posts: []\n        });\n        changeStoryAdded(true);\n        console.log(\"Add successful!\");\n      } else { // If there is an existing story with the same name\n        changeAlert(\"There is already a story with that title\");\n      }\n    } else history.push('/signup');\n  \n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const storyRef = db.collection('stories');\n      const storyData = await storyRef.get();\n      const newStories = [];\n      storyData.forEach(story => {\n        const {text, title} = story.data();\n        newStories.push(\n          <Col>\n            <Card className={classes.storyCard}>\n            <Card.Body>\n              <Card.Title>{title}</Card.Title>\n              <Card.Text>\n                {text.length < 165 ? text : `${text.slice(0, 165)}...`}\n              </Card.Text>\n              <Button variant=\"primary\"><Link className={classes.titleLink} to={`/stories/${title}`}>Visit this story</Link></Button>\n            </Card.Body>\n            </Card>\n        </Col>\n        )\n      })\n      changeStoryAdded(false);\n      changeStories(newStories);\n      changeLoading(false);\n    };\n    fetchData();\n  }, [storyAdded]);\n\n  return (\n    <>\n    {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n    <Container className={classes.container} fluid>\n      <Row>\n      {loading ? \n        <Spinner/>\n        :\n        stories}\n      </Row>\n    </Container>\n  \n  \n  <Card>\n    <Card.Body>\n        <h2 className=\"text-center mb-4\">Add new story</h2>\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label>Title</Form.Label>\n                <Form.Control value={titleRef} onChange={changeTitleRef} required />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Beginning text</Form.Label>\n                <Form.Control value={textRef} onChange={changeTextRef} required />\n            </Form.Group>\n            <Button className=\"w-100\" type=\"submit\">Add story</Button>\n        </Form>\n    </Card.Body>\n </Card>\n  </>\n  )\n};\n\nexport default withStyles(styles)(Home);","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js",[],"/Volumes/NEO Storage/storytime/src/components/App.js",[],"/Volumes/NEO Storage/storytime/src/hooks/useForm.js",[],"/Volumes/NEO Storage/storytime/src/components/AppNav.js",["72"],"import { useContext } from 'react';\nimport { Navbar, Nav, Button, NavDropdown } from 'react-bootstrap';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport { withStyles } from '@material-ui/core';\nimport { auth } from '../firebase/Firebase';\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n    profilePicture: {\n        width: \"2.5rem\",\n        height: \"3rem\"\n    },\n    navbar: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    userInfo: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginLeft: \"auto\",\n        marginRight: \"1rem\"\n    },\n    navItem: {\n        fontSize: \"0.955rem\",\n    }\n}\n\nfunction AppNav(props) {\n    const { user, updateUser } = useContext(AuthenticatedContext);\n    const { classes } = props;\n\n    const handleSignout = () => {\n        auth.signOut().then(() => {\n            updateUser(null);\n            console.log(\"Successfully signed out...\");\n        }).catch(err => {\n            console.log(`There was an error logging you out, ${err}`)\n        })\n    };\n\n    return (\n            <Navbar collapseOnSelect className={classes.navbar} bg=\"dark\" variant=\"dark\" expand=\"sm\">\n                <Navbar.Brand style={{marginLeft: \"1rem\"}} as={Link} to=\"/\">Storytime</Navbar.Brand>\n                <Navbar.Toggle/>\n                <Navbar.Collapse className={classes.collapse}>\n                    <Nav style={{width: \"100%\"}}>\n                        {\n                            \n                            user ? \n                                <div className={classes.userInfo}>\n                                    <Navbar.Brand className={classes.navItem} onClick={handleSignout}><Button>Sign Out</Button></Navbar.Brand> \n                                    <Navbar.Brand className={classes.navItem}>Welcome back, {user.displayName}</Navbar.Brand>  \n                                    <img alt=\"profile\" className={classes.profilePicture} src={user.photoURL}/>\n                                </div>\n                            : \n                                <>\n                                    <Nav.Link as={Link} to=\"/signup\">Sign Up</Nav.Link> \n                                    <Nav.Link as={Link} to=\"/login\">Log in</Nav.Link>\n                                </>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n    )\n}\nexport default withStyles(styles)(AppNav);","/Volumes/NEO Storage/storytime/src/components/Error.js",[],"/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js",[],"/Volumes/NEO Storage/storytime/src/components/Login.js",["73"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase/Firebase';\nimport { Card, Button, Form, Alert, Container } from 'react-bootstrap';\nimport useForm from '../hooks/useForm';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\n\nexport default function Signin() {\n    const [emailRef, changeEmailRef] = useForm(\"\");\n    const [passwordRef, changePasswordRef] = useForm(\"\");\n    const {user, updateUser} = useContext(AuthenticatedContext);\n    const [alert, changeAlert] = useState(\"\");\n    const history = useHistory();\n    const handleClick = e => {\n        e.preventDefault();\n            auth.signInWithEmailAndPassword(emailRef, passwordRef).then(() => {\n                const currentUser = auth.currentUser;\n                updateUser(currentUser);\n                history.push('/');\n                console.log(\"Successfully signed back in\");\n            }).catch(() => {\n                changeAlert(\"Invalid password\")\n            });   \n\n    };\n\n    // Used to prevent signed in user from accessing this page\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [user]);\n\n    return (\n        <Container style={{maxWidth: \"70vh\", marginTop: \"4rem\"}}>\n         {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log in</h2>\n                    <Form onSubmit={handleClick}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control value={emailRef} onChange={changeEmailRef} type=\"email\" required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control value={passwordRef} onChange={changePasswordRef} type=\"password\" required />\n                        </Form.Group>\n                        <Button className=\"w-100\" type=\"submit\">Log in</Button>\n                        <Form.Group style={{marginTop: \"2rem\", textAlign: \"center\" }}>\n                            <Form.Label>Don't have an account? <Link to=\"/signup\">Sign up</Link></Form.Label>\n                        </Form.Group>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n            </div>\n        </Container>\n    )\n}\n","/Volumes/NEO Storage/storytime/src/components/Signup.js",["74"],"/Volumes/NEO Storage/storytime/src/components/Story.js",["75"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { useEffect, useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport { db } from '../firebase/Firebase';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport useForm from '../hooks/useForm';\nimport Post from './Post';\nimport Spinner from './Spinner';\n\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    title: {\n        margin: \"2rem 0\",\n        textAlign: \"center\",\n    },\n    '@global': {\n        '.effect7': {\n            display: \"flex\",\n            width: \"100vh\",\n            height: \"20rem\",\n            position: 'relative',\n            webkitBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            mozBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            boxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            padding: \"1rem\"\n            }\n    },\n    text: {\n        width: \"100%\",\n        height: \"100%\",\n        background: \"rgba(0, 0, 0, 0)\",\n        border: \"none\",\n        resize: \"none\",\n        color: \"black\",\n    },  \n    post: {\n        margin: \"2.5rem 0\"\n    },\n    postContainer: {\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n        marginTop: \"2rem\"\n    },\n    '@media (max-width: 748px)': {\n        '@global': {\n            '.effect7': {\n                display: \"flex\",\n                width: \"48vh\",\n                }\n    }\n}\n}\n\n\n\nfunction Story(props) {\n    const history = useHistory();\n    const { title } = props.match.params;\n    const { classes } = props;\n    const { user } = useContext(AuthenticatedContext);\n    const [ loading, changeLoading ] = useState(true);\n    const [ displayText, changeText ] = useState(\"\");\n    const [ posts, changePosts ] = useState([]);\n    const [ postAdded, changePostAdded ] = useState(false);\n    const [ newPost, changeNewPost ] = useForm(\"\");\n\n    // Click handler for adding a new post to the story\n    const handleClick = async e => {\n        if (user) {\n            e.preventDefault();\n            const storyRef = db.collection('stories').doc(title);\n            const post = {\n                owner: {\n                    photoURL: user.photoURL,   \n                    username: user.displayName\n                },\n                text: newPost,\n                votes: 0\n            }\n            await storyRef.update({\n                posts: firebase.firestore.FieldValue.arrayUnion(post)\n            }).then(() => {console.log(\"Post successfully added!\"); changePostAdded(true)}).catch(err => console.log(err));\n        } else history.push('/signup')\n       \n    }\n\n\n    // Useeffect for fetching story and post data\n    useEffect(() => {\n        const fetchData = async () => {\n            const storyRef = db.collection('stories').doc(title);\n            const storyData = await storyRef.get();\n            if (storyData.exists) {\n                const { posts, text } = storyData.data();\n                changeLoading(false);\n                // Get all the posts from the database for this particular story\n                if (posts.length > 0) {\n                    const newPosts = posts.map(post => <Post {...post} />);\n                    changePosts(newPosts);\n                }\n                changeText(text);\n                changePostAdded(false);\n            } else history.push(\"/error\");\n        };\n        fetchData();\n    }, [postAdded]);\n\n    return (\n        <>\n             <Container className={classes.container}>\n            {loading ? \n            <Spinner />\n            :\n                <>\n                <div>\n                    <h1 className={classes.title}>{title}</h1>\n                    \n                    <div className=\"box effect7\">\n                        <textarea disabled=\"yes\" className={classes.text} value={displayText}/>\n                    </div>\n                </div>\n                \n                <ul className={classes.postContainer}>\n                    {posts}\n                </ul>\n\n                <Form onSubmit={handleClick} className={classes.post}>\n                            <Form.Group>\n                                <Form.Label>New post</Form.Label>\n                                <Form.Control maxLength=\"90\" value={newPost} onChange={changeNewPost} type=\"text\" required />\n                            </Form.Group>\n                            <Button className=\"w-100\" type=\"submit\">Post</Button>\n                </Form>\n                </>\n            }\n             </Container>\n        \n        </>\n    )\n}\n\nexport default withStyles(styles)(Story);\n","/Volumes/NEO Storage/storytime/src/components/Post.js",["76"],"import { withStyles } from '@material-ui/core';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        width: \"100%\",\n        height: \"8rem\",\n        margin: \"0.7rem 0\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        webkitBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        mozBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        boxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\"\n    },\n    user: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"25%\",\n        margin: \"1rem auto 0 0\"\n    },\n    image: {\n        width: \"5.5rem\", \n        height: \"5rem\"\n    },\n    text: {\n        fontSize: \"1.5rem\",\n        width: \"100%\"\n    },\n    arrow: {\n        display: \"flex\",\n        margin: \"0 0.5rem\",\n        fontSize: \"1.5rem\",\n    },\n    arrowContainer: {\n        marginLeft: \"8rem\",\n        display: \"flex\"\n    },\n    '@media (max-width: 1024px)': {\n        text: {\n            fontSize: \"0.84rem\"\n        },\n        arrowContainer: {\n            marginLeft: \"0\"\n        }\n}\n}\n\nfunction Post(props) {\n    const { classes, text, votes } = props;\n    const { photoURL, username } = props.owner;\n\n    return (\n        <Row className={classes.container}>\n            <Col>\n                <div className={classes.user}>\n                    <img className={classes.image} src={photoURL}/>\n                    <Link to={`/users/${username}`}><h4 style={{fontSize: \"0.7rem\"}}>{username}</h4></Link>\n                </div>\n            </Col>\n            <Col>\n                <h4 className={classes.text}>{text}</h4>\n            </Col>\n            <Col>\n                <div className={classes.arrowContainer}> \n                    <i className={`fas fa-arrow-up ${classes.arrow}`}></i>\n                    {votes}\n                    <i className={`fas fa-arrow-down ${classes.arrow}`}></i>\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nexport default withStyles(styles)(Post);","/Volumes/NEO Storage/storytime/src/components/Spinner.js",[],"/Volumes/NEO Storage/storytime/src/components/User.js",["77","78","79"],"import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { db } from '../firebase/Firebase';\nimport { } from 'react-bootstrap';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport Spinner from './Spinner';\nimport UserDisplay from './UserDisplay';\n\nfunction User(props) {\n    const { user } = props.match.params;\n    const history = useHistory();\n    const { currentUser, updateUser } = useContext(AuthenticatedContext);\n    const [ userData, changeUserData ] = useState(null);\n    const [ pageLoaded, changePageLoaded ] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const userInfoRef = db.collection('users').doc(user);\n            const userInfo = await userInfoRef.get();\n            if (userInfo.exists) {\n                changeUserData(userInfo.data());\n            } else history.push('/error');\n        };\n        fetchData();\n        changePageLoaded(true);\n    }, []);\n\n    return (\n        <div>\n            {pageLoaded ? \n            <UserDisplay {...userData}/>\n            :\n            <Spinner />\n        }\n            \n        </div>\n    )\n}\n\nexport default User;","/Volumes/NEO Storage/storytime/src/components/UserDisplay.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":81,"column":6,"nodeType":"87","endLine":81,"endColumn":18,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":31,"nodeType":"91","messageId":"92","endLine":2,"endColumn":42},{"ruleId":"85","severity":1,"message":"93","line":33,"column":8,"nodeType":"87","endLine":33,"endColumn":14,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"93","line":25,"column":8,"nodeType":"87","endLine":25,"endColumn":14,"suggestions":"95"},{"ruleId":"85","severity":1,"message":"96","line":116,"column":8,"nodeType":"87","endLine":116,"endColumn":19,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":60,"column":21,"nodeType":"100","endLine":60,"endColumn":68},{"ruleId":"89","severity":1,"message":"101","line":12,"column":13,"nodeType":"91","messageId":"92","endLine":12,"endColumn":24},{"ruleId":"89","severity":1,"message":"102","line":12,"column":26,"nodeType":"91","messageId":"92","endLine":12,"endColumn":36},{"ruleId":"85","severity":1,"message":"103","line":26,"column":8,"nodeType":"87","endLine":26,"endColumn":10,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"99","line":25,"column":13,"nodeType":"100","endLine":25,"endColumn":69},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.storyCard' and 'classes.titleLink'. Either include them or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["108"],["109"],"React Hook useEffect has missing dependencies: 'history' and 'title'. Either include them or remove the dependency array.",["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'currentUser' is assigned a value but never used.","'updateUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},{"desc":"114","fix":"119"},"Update the dependencies array to be: [classes.storyCard, classes.titleLink, storyAdded]",{"range":"120","text":"121"},"Update the dependencies array to be: [history, user]",{"range":"122","text":"123"},{"range":"124","text":"123"},"Update the dependencies array to be: [history, postAdded, title]",{"range":"125","text":"126"},{"range":"127","text":"123"},[2601,2613],"[classes.storyCard, classes.titleLink, storyAdded]",[1260,1266],"[history, user]",[1106,1112],[3722,3733],"[history, postAdded, title]",[1002,1004]]