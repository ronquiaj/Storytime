[{"/Volumes/NEO Storage/storytime/src/index.js":"1","/Volumes/NEO Storage/storytime/src/components/Home.js":"2","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js":"3","/Volumes/NEO Storage/storytime/src/components/App.js":"4","/Volumes/NEO Storage/storytime/src/hooks/useForm.js":"5","/Volumes/NEO Storage/storytime/src/components/AppNav.js":"6","/Volumes/NEO Storage/storytime/src/components/Error.js":"7","/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js":"8","/Volumes/NEO Storage/storytime/src/components/Login.js":"9","/Volumes/NEO Storage/storytime/src/components/Signup.js":"10","/Volumes/NEO Storage/storytime/src/components/Story.js":"11","/Volumes/NEO Storage/storytime/src/components/Post.js":"12","/Volumes/NEO Storage/storytime/src/components/Spinner.js":"13"},{"size":348,"mtime":1608348905480,"results":"14","hashOfConfig":"15"},{"size":3587,"mtime":1609093992330,"results":"16","hashOfConfig":"15"},{"size":639,"mtime":1608768084530,"results":"17","hashOfConfig":"15"},{"size":863,"mtime":1608860220050,"results":"18","hashOfConfig":"15"},{"size":288,"mtime":1608837770610,"results":"19","hashOfConfig":"15"},{"size":2481,"mtime":1609094474230,"results":"20","hashOfConfig":"15"},{"size":376,"mtime":1608847129830,"results":"21","hashOfConfig":"15"},{"size":664,"mtime":1608767565710,"results":"22","hashOfConfig":"15"},{"size":2658,"mtime":1609093395440,"results":"23","hashOfConfig":"15"},{"size":5423,"mtime":1609094466100,"results":"24","hashOfConfig":"15"},{"size":4906,"mtime":1609093974610,"results":"25","hashOfConfig":"15"},{"size":2011,"mtime":1609059229030,"results":"26","hashOfConfig":"15"},{"size":2582,"mtime":1609094023000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"y0gnho",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/NEO Storage/storytime/src/index.js",[],["57","58"],"/Volumes/NEO Storage/storytime/src/components/Home.js",["59"],"/Volumes/NEO Storage/storytime/src/firebase/Firebase.js",[],"/Volumes/NEO Storage/storytime/src/components/App.js",[],"/Volumes/NEO Storage/storytime/src/hooks/useForm.js",[],"/Volumes/NEO Storage/storytime/src/components/AppNav.js",["60"],"/Volumes/NEO Storage/storytime/src/components/Error.js",[],"/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js",[],"/Volumes/NEO Storage/storytime/src/components/Login.js",["61"],"/Volumes/NEO Storage/storytime/src/components/Signup.js",["62"],"/Volumes/NEO Storage/storytime/src/components/Story.js",["63","64"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { useEffect, useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport { db } from '../firebase/Firebase';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport spinner from '../styles/spinner';\nimport useForm from '../hooks/useForm';\nimport Post from './Post';\n\n\nconst styles = {\n    ...spinner,\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    title: {\n        margin: \"2rem 0\",\n        textAlign: \"center\",\n    },\n    '@global': {\n        '.effect7': {\n            display: \"flex\",\n            width: \"100vh\",\n            height: \"20rem\",\n            position: 'relative',\n            webkitBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            mozBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            boxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            padding: \"1rem\"\n            }\n    },\n    text: {\n        width: \"100%\",\n        height: \"100%\",\n        background: \"rgba(0, 0, 0, 0)\",\n        border: \"none\",\n        resize: \"none\",\n        color: \"black\",\n    },  \n    post: {\n        margin: \"2.5rem 0\"\n    },\n    postContainer: {\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n        marginTop: \"2rem\"\n    },\n    '@media (max-width: 748px)': {\n        '@global': {\n            '.effect7': {\n                display: \"flex\",\n                width: \"48vh\",\n                }\n    }\n}\n}\n\n\n\nfunction Story(props) {\n    const history = useHistory();\n    const { title } = props.match.params;\n    const { classes } = props;\n    const { user } = useContext(AuthenticatedContext);\n    const [ loading, changeLoading ] = useState(true);\n    const [ displayText, changeText ] = useState(\"\");\n    const [ posts, changePosts ] = useState([]);\n    const [ postAdded, changePostAdded ] = useState(false);\n    const [ newPost, changeNewPost ] = useForm(\"\");\n\n    // Click handler for adding a new post to the story\n    const handleClick = async e => {\n        if (user) {\n            e.preventDefault();\n            const storyRef = db.collection('stories').doc(title);\n            const post = {\n                owner: {\n                    photoURL: user.photoURL,   \n                    username: user.displayName\n                },\n                text: newPost,\n                votes: 0\n            }\n            await storyRef.update({\n                posts: firebase.firestore.FieldValue.arrayUnion(post)\n            }).then(() => {console.log(\"Post successfully added!\"); changePostAdded(true)}).catch(err => console.log(err));\n        } else history.push('/signup')\n       \n    }\n\n\n    // Useeffect for fetching story and post data\n    useEffect(() => {\n\n        const fetchData = async () => {\n            const storyRef = db.collection('stories').doc(title);\n            const storyData = await storyRef.get();\n            if (storyData.exists) {\n                const { posts, text } = storyData.data();\n                changeLoading(false);\n                // Get all the posts from the database for this particular story\n                if (posts.length > 0) {\n                    const newPosts = posts.map(post => <Post {...post} />);\n                    changePosts(newPosts);\n                }\n                changeText(text);\n                changePostAdded(false);\n            } else history.push(\"/error\");\n        };\n        fetchData();\n    }, [postAdded]);\n\n    return (\n        <>\n             <Container className={classes.container}>\n            {loading ? \n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n            :\n                <>\n                <div>\n                    <h1 className={classes.title}>{title}</h1>\n                    \n                    <div className=\"box effect7\">\n                        <textarea disabled=\"yes\" className={classes.text} value={displayText}/>\n                    </div>\n                </div>\n                \n                <ul className={classes.postContainer}>\n                    {posts}\n                </ul>\n\n                <Form onSubmit={handleClick} className={classes.post}>\n                            <Form.Group>\n                                <Form.Label>New post</Form.Label>\n                                <Form.Control maxLength=\"90\" value={newPost} onChange={changeNewPost} type=\"text\" required />\n                            </Form.Group>\n                            <Button className=\"w-100\" type=\"submit\">Post</Button>\n                </Form>\n                </>\n            }\n             </Container>\n        \n        </>\n    )\n}\n\nexport default withStyles(styles)(Story);\n","/Volumes/NEO Storage/storytime/src/components/Post.js",["65"],"import { withStyles } from '@material-ui/core';\nimport { Row, Col } from 'react-bootstrap';\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        width: \"100%\",\n        height: \"8rem\",\n        margin: \"0.7rem 0\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        webkitBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        mozBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        boxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\"\n    },\n    user: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"25%\",\n        margin: \"1rem auto 0 0\"\n    },\n    image: {\n        width: \"5.5rem\", \n        height: \"5rem\"\n    },\n    text: {\n        fontSize: \"1.5rem\",\n        width: \"100%\"\n    },\n    arrow: {\n        margin: \"0.5rem\",\n        fontSize: \"1.5rem\",\n    },\n    arrowContainer: {\n        marginLeft: \"8rem\",\n        display: \"flex\"\n    },\n    '@media (max-width: 1024px)': {\n        text: {\n            fontSize: \"0.84rem\"\n        },\n        arrowContainer: {\n            marginLeft: \"0\"\n        }\n}\n}\n\nfunction Post(props) {\n    const { classes, text, votes } = props;\n    const { photoURL, username } = props.owner;\n\n    return (\n        <Row className={classes.container}>\n            <Col>\n                <div className={classes.user}>\n                    <img className={classes.image} src={photoURL}/>\n                    <h4 style={{fontSize: \"0.7rem\"}}>{username}</h4>\n                </div>\n            </Col>\n            <Col>\n                <h4 className={classes.text}>{text}</h4>\n            </Col>\n            <Col>\n                <div className={classes.arrowContainer}> \n                    <i className={`fas fa-arrow-up ${classes.arrow}`}></i>\n                    {votes}\n                    <i className={`fas fa-arrow-down ${classes.arrow}`}></i>\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nexport default withStyles(styles)(Post);","/Volumes/NEO Storage/storytime/src/components/Spinner.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":81,"column":6,"nodeType":"72","endLine":81,"endColumn":18,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":31,"nodeType":"76","messageId":"77","endLine":2,"endColumn":42},{"ruleId":"70","severity":1,"message":"78","line":33,"column":8,"nodeType":"72","endLine":33,"endColumn":14,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"78","line":25,"column":8,"nodeType":"72","endLine":25,"endColumn":14,"suggestions":"80"},{"ruleId":"74","severity":1,"message":"81","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":14},{"ruleId":"70","severity":1,"message":"82","line":118,"column":8,"nodeType":"72","endLine":118,"endColumn":19,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":58,"column":21,"nodeType":"86","endLine":58,"endColumn":68},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.storyCard' and 'classes.titleLink'. Either include them or remove the dependency array.","ArrayExpression",["89"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["90"],["91"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'title'. Either include them or remove the dependency array.",["92"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [classes.storyCard, classes.titleLink, storyAdded]",{"range":"100","text":"101"},"Update the dependencies array to be: [history, user]",{"range":"102","text":"103"},{"range":"104","text":"103"},"Update the dependencies array to be: [history, postAdded, title]",{"range":"105","text":"106"},[2601,2613],"[classes.storyCard, classes.titleLink, storyAdded]",[1260,1266],"[history, user]",[1106,1112],[3753,3764],"[history, postAdded, title]"]