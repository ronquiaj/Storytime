[{"/Volumes/NEO Storage/storytime/src/index.js":"1","/Volumes/NEO Storage/storytime/src/components/Home.js":"2","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js":"3","/Volumes/NEO Storage/storytime/src/components/App.js":"4","/Volumes/NEO Storage/storytime/src/hooks/useForm.js":"5","/Volumes/NEO Storage/storytime/src/components/AppNav.js":"6","/Volumes/NEO Storage/storytime/src/components/Error.js":"7","/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js":"8","/Volumes/NEO Storage/storytime/src/components/Login.js":"9","/Volumes/NEO Storage/storytime/src/components/Signup.js":"10","/Volumes/NEO Storage/storytime/src/components/Story.js":"11","/Volumes/NEO Storage/storytime/src/styles/spinner.js":"12","/Volumes/NEO Storage/storytime/src/components/Post.js":"13"},{"size":348,"mtime":1608348905480,"results":"14","hashOfConfig":"15"},{"size":3456,"mtime":1608907566010,"results":"16","hashOfConfig":"15"},{"size":639,"mtime":1608768084530,"results":"17","hashOfConfig":"15"},{"size":863,"mtime":1608860220050,"results":"18","hashOfConfig":"15"},{"size":288,"mtime":1608837770610,"results":"19","hashOfConfig":"15"},{"size":2520,"mtime":1609040429250,"results":"20","hashOfConfig":"15"},{"size":376,"mtime":1608847129830,"results":"21","hashOfConfig":"15"},{"size":664,"mtime":1608767565710,"results":"22","hashOfConfig":"15"},{"size":2478,"mtime":1608860398270,"results":"23","hashOfConfig":"15"},{"size":5163,"mtime":1608911138700,"results":"24","hashOfConfig":"15"},{"size":4914,"mtime":1609040721810,"results":"25","hashOfConfig":"15"},{"size":1995,"mtime":1608857502450,"results":"26","hashOfConfig":"15"},{"size":2004,"mtime":1609041491770,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"y0gnho",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/NEO Storage/storytime/src/index.js",[],["58","59"],"/Volumes/NEO Storage/storytime/src/components/Home.js",["60"],"import { db } from '../firebase/Firebase';\nimport { useState, useEffect } from 'react';\nimport useForm from '../hooks/useForm'; \nimport { withStyles } from '@material-ui/core';\nimport { Card, Button, Form, Container, Row, Col, Alert } from 'react-bootstrap'; \nimport { Link } from 'react-router-dom';\nimport spinner from '../styles/spinner';\n\nconst styles = {\n  storyCard: {\n    width: \"25rem\",\n    margin: \"3rem 1rem\"\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleLink: {\n    color: \"white\"\n  },\n  ...spinner, // Spinner object on loading\n}\n\nfunction Home(props) {\n  const {classes} = props;\n  const [titleRef, changeTitleRef] = useForm(\"\");\n  const [textRef, changeTextRef] = useForm(\"\");\n  const [alert, changeAlert] = useState(\"\");\n  const [stories, changeStories] = useState([]);\n  const [storyAdded, changeStoryAdded] = useState(false);\n  const [loading, changeLoading] = useState(true);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const storiesRef = await db.collection('stories').doc(titleRef).get(); // Fetch the data for storiesref\n    if (!storiesRef.exists) { \n      await db.collection('stories').doc(titleRef).set({\n        title: titleRef,\n        text: textRef,\n        posts: []\n      });\n      changeStoryAdded(true);\n      console.log(\"Add successful!\");\n    } else { // If there is an existing story with the same name\n      changeAlert(\"There is already a story with that title\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const storyRef = db.collection('stories');\n      const storyData = await storyRef.get();\n      const newStories = [];\n      storyData.forEach(story => {\n        const {text, title} = story.data();\n        newStories.push(\n          <Col>\n          <Card className={classes.storyCard}>\n          <Card.Body>\n            <Card.Title>{title}</Card.Title>\n            <Card.Text>\n              {text.length < 165 ? text : `${text.slice(0, 165)}...`}\n            </Card.Text>\n            <Button variant=\"primary\"><Link className={classes.titleLink} to={`/stories/${title}`}>Visit this story</Link></Button>\n          </Card.Body>\n          </Card>\n        </Col>\n        )\n      })\n      changeStoryAdded(false);\n      changeStories(newStories);\n      changeLoading(false);\n    };\n    fetchData();\n  }, [storyAdded]);\n\n  return (\n    <>\n    {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n    <Container className={classes.container} fluid>\n      <Row>\n      {loading ? \n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        :\n        stories}\n      </Row>\n    </Container>\n  \n  \n  <Card>\n    <Card.Body>\n        <h2 className=\"text-center mb-4\">Add new story</h2>\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label>Title</Form.Label>\n                <Form.Control value={titleRef} onChange={changeTitleRef} required />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Beginning text</Form.Label>\n                <Form.Control value={textRef} onChange={changeTextRef} required />\n            </Form.Group>\n            <Button className=\"w-100\" type=\"submit\">Add story</Button>\n        </Form>\n    </Card.Body>\n </Card>\n  </>\n  )\n};\n\nexport default withStyles(styles)(Home);","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js",[],"/Volumes/NEO Storage/storytime/src/components/App.js",[],"/Volumes/NEO Storage/storytime/src/hooks/useForm.js",[],"/Volumes/NEO Storage/storytime/src/components/AppNav.js",["61"],"import { useContext } from 'react';\nimport { Navbar, Nav, Button, NavDropdown } from 'react-bootstrap';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport { withStyles } from '@material-ui/core';\nimport { auth } from '../firebase/Firebase';\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n    profilePicture: {\n        width: \"2.5rem\",\n        height: \"3rem\"\n    },\n    navbar: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    userInfo: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginLeft: \"auto\",\n        marginRight: \"1rem\"\n    },\n    navItem: {\n        fontSize: \"0.955rem\",\n    },\n    collapse: {\n        \n    }\n\n}\n\nfunction AppNav(props) {\n    const { user, updateUser } = useContext(AuthenticatedContext);\n    const { classes } = props;\n\n    const handleSignout = () => {\n        auth.signOut().then(() => {\n            updateUser(null);\n            console.log(\"Successfully signed out...\");\n        }).catch(err => {\n            console.log(`There was an error logging you out, ${err}`)\n        })\n    };\n\n    return (\n            <Navbar collapseOnSelect className={classes.navbar} bg=\"dark\" variant=\"dark\" expand=\"sm\">\n                <Navbar.Brand style={{marginLeft: \"1rem\"}} as={Link} to=\"/\">Storytime</Navbar.Brand>\n                <Navbar.Toggle/>\n                <Navbar.Collapse className={classes.collapse}>\n                    <Nav style={{width: \"100%\"}}>\n                        {\n                            \n                            user ? \n                                <div className={classes.userInfo}>\n                                    <Navbar.Brand eventKey=\"1\" className={classes.navItem} onClick={handleSignout}><Button>Sign Out</Button></Navbar.Brand> \n                                    <Navbar.Brand className={classes.navItem}>Welcome back, {user.displayName}</Navbar.Brand>  \n                                    <img alt=\"profile\" className={classes.profilePicture} src={user.photoURL}/>\n                                </div>\n                            : \n                                <>\n                                    <Nav.Link eventKey=\"2\" as={Link} to=\"/signup\">Sign Up</Nav.Link> \n                                    <Nav.Link eventKey=\"3\" as={Link} to=\"/login\">Log in</Nav.Link>\n                                </>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n    )\n}\nexport default withStyles(styles)(AppNav);","/Volumes/NEO Storage/storytime/src/components/Error.js",[],"/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js",[],"/Volumes/NEO Storage/storytime/src/components/Login.js",[],"/Volumes/NEO Storage/storytime/src/components/Signup.js",[],"/Volumes/NEO Storage/storytime/src/components/Story.js",["62","63"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { useEffect, useState, useContext } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport { db } from '../firebase/Firebase';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport spinner from '../styles/spinner';\nimport useForm from '../hooks/useForm';\nimport Post from './Post';\n\n\nconst styles = {\n    ...spinner,\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    title: {\n        margin: \"2rem 0\",\n        textAlign: \"center\",\n    },\n    '@global': {\n        '.effect7': {\n            display: \"flex\",\n            width: \"100vh\",\n            height: \"20rem\",\n            position: 'relative',\n            webkitBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            mozBoxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            boxShadow: '0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset',\n            padding: \"1rem\"\n            }\n    },\n    text: {\n        width: \"100%\",\n        height: \"100%\",\n        background: \"rgba(0, 0, 0, 0)\",\n        border: \"none\",\n        resize: \"none\",\n        color: \"black\",\n    },  \n    post: {\n        margin: \"2.5rem 0\"\n    },\n    postContainer: {\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n        marginTop: \"2rem\"\n    },\n    '@media (max-width: 748px)': {\n        '@global': {\n            '.effect7': {\n                display: \"flex\",\n                width: \"60vh\",\n                }\n    }\n}\n}\n\n\n\nfunction Story(props) {\n    const history = useHistory();\n    const { title } = props.match.params;\n    const { classes } = props;\n    const { user } = useContext(AuthenticatedContext);\n    const [ loading, changeLoading ] = useState(true);\n    const [ displayText, changeText ] = useState(\"\");\n    const [ posts, changePosts ] = useState([]);\n    const [ postAdded, changePostAdded ] = useState(false);\n    const [ newPost, changeNewPost ] = useForm(\"\");\n\n    // Click handler for adding a new post to the story\n    const handleClick = async e => {\n        e.preventDefault();\n        const storyRef = db.collection('stories').doc(title);\n        const post = {\n            owner: {\n                photoURL: user.photoURL,   \n                username: user.displayName\n            },\n            text: newPost,\n            votes: 0\n        }\n        await storyRef.update({\n            posts: firebase.firestore.FieldValue.arrayUnion(post)\n        }).then(() => {console.log(\"Post successfully added!\"); changePostAdded(true)}).catch(err => console.log(err));\n    }\n\n\n    // Useeffect for fetching story and post data\n    useEffect(() => {\n\n        const fetchData = async () => {\n            const storyRef = db.collection('stories').doc(title);\n            const storyData = await storyRef.get();\n            if (storyData.exists) {\n                const { posts, text } = storyData.data();\n                changeLoading(false);\n                // Get all the posts from the database for this particular story\n                if (posts.length > 0) {\n                    const newPosts = posts.map(post => <Post {...post} />);\n                    changePosts(newPosts);\n                }\n                changeText(text);\n                changePostAdded(false);\n            } else history.push(\"/error\");\n        };\n        fetchData();\n    }, [postAdded]);\n\n    return (\n        <>\n             <Container className={classes.container}>\n            {loading ? \n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n            :\n                <>\n                <div>\n                    <h1 className={classes.title}>{title}</h1>\n                    \n                    <div className=\"box effect7\">\n                        <textarea disabled=\"yes\" className={classes.text} value={displayText}/>\n                    </div>\n                </div>\n                \n                <ul className={classes.postContainer}>\n                    {posts}\n                </ul>\n\n                <Form onSubmit={handleClick} className={classes.post}>\n                            <Form.Group>\n                                <Form.Label>New post</Form.Label>\n                                <Form.Control value={newPost} onChange={changeNewPost} type=\"text\" required />\n                            </Form.Group>\n                            <Button className=\"w-100\" type=\"submit\">Post</Button>\n                </Form>\n                </>\n            }\n             </Container>\n        \n        </>\n    )\n}\n\nexport default withStyles(styles)(Story);\n","/Volumes/NEO Storage/storytime/src/styles/spinner.js",[],"/Volumes/NEO Storage/storytime/src/components/Post.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":76,"column":6,"nodeType":"71","endLine":76,"endColumn":18,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":31,"nodeType":"75","messageId":"76","endLine":2,"endColumn":42},{"ruleId":"73","severity":1,"message":"77","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"69","severity":1,"message":"78","line":115,"column":8,"nodeType":"71","endLine":115,"endColumn":19,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":58,"column":21,"nodeType":"82","endLine":58,"endColumn":68},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.storyCard' and 'classes.titleLink'. Either include them or remove the dependency array.","ArrayExpression",["85"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'title'. Either include them or remove the dependency array.",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [classes.storyCard, classes.titleLink, storyAdded]",{"range":"91","text":"92"},"Update the dependencies array to be: [history, postAdded, title]",{"range":"93","text":"94"},[2358,2370],"[classes.storyCard, classes.titleLink, storyAdded]",[3634,3645],"[history, postAdded, title]"]