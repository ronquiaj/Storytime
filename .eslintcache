[{"/Volumes/NEO Storage/storytime/src/index.js":"1","/Volumes/NEO Storage/storytime/src/components/Home.js":"2","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js":"3","/Volumes/NEO Storage/storytime/src/components/App.js":"4","/Volumes/NEO Storage/storytime/src/hooks/useForm.js":"5","/Volumes/NEO Storage/storytime/src/components/AppNav.js":"6","/Volumes/NEO Storage/storytime/src/components/Error.js":"7","/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js":"8","/Volumes/NEO Storage/storytime/src/components/Login.js":"9","/Volumes/NEO Storage/storytime/src/components/Signup.js":"10","/Volumes/NEO Storage/storytime/src/components/Story.js":"11","/Volumes/NEO Storage/storytime/src/components/Post.js":"12","/Volumes/NEO Storage/storytime/src/components/Spinner.js":"13","/Volumes/NEO Storage/storytime/src/components/User.js":"14","/Volumes/NEO Storage/storytime/src/components/UserDisplay.js":"15","/Volumes/NEO Storage/storytime/src/components/EditUser.js":"16","/Volumes/NEO Storage/storytime/src/contexts/UpdatedUserContext.js":"17"},{"size":348,"mtime":1608348905480,"results":"18","hashOfConfig":"19"},{"size":3926,"mtime":1609545521650,"results":"20","hashOfConfig":"19"},{"size":718,"mtime":1609300728520,"results":"21","hashOfConfig":"19"},{"size":1414,"mtime":1609539400940,"results":"22","hashOfConfig":"19"},{"size":302,"mtime":1609543895230,"results":"23","hashOfConfig":"19"},{"size":3347,"mtime":1609546388850,"results":"24","hashOfConfig":"19"},{"size":376,"mtime":1608847129830,"results":"25","hashOfConfig":"19"},{"size":664,"mtime":1608767565710,"results":"26","hashOfConfig":"19"},{"size":2658,"mtime":1609093395440,"results":"27","hashOfConfig":"19"},{"size":6048,"mtime":1609458613910,"results":"28","hashOfConfig":"19"},{"size":7221,"mtime":1609642889680,"results":"29","hashOfConfig":"19"},{"size":6248,"mtime":1609574165790,"results":"30","hashOfConfig":"19"},{"size":2582,"mtime":1609118431570,"results":"31","hashOfConfig":"19"},{"size":1070,"mtime":1609545537520,"results":"32","hashOfConfig":"19"},{"size":773,"mtime":1609543769430,"results":"33","hashOfConfig":"19"},{"size":5422,"mtime":1609539586690,"results":"34","hashOfConfig":"19"},{"size":615,"mtime":1609539670040,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"y0gnho",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Volumes/NEO Storage/storytime/src/index.js",[],["77","78"],"/Volumes/NEO Storage/storytime/src/components/Home.js",["79"],"import { db } from '../firebase/Firebase';\nimport { useState, useEffect, useContext } from 'react';\nimport useForm from '../hooks/useForm'; \nimport { withStyles } from '@material-ui/core';\nimport { Card, Button, Form, Container, Row, Col, Alert } from 'react-bootstrap'; \nimport { Link, useHistory } from 'react-router-dom';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport Spinner from './Spinner';\n\nconst styles = {\n  storyCard: {\n    width: \"25rem\",\n    margin: \"3rem 1rem\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  titleLink: {\n    color: \"white\",\n  },\n};\n\nfunction Home(props) {\n  const history = useHistory();\n  const { classes } = props;\n  const [ titleRef, changeTitleRef ] = useForm(\"\");\n  const [ textRef, changeTextRef ] = useForm(\"\");\n  const [ alert, changeAlert ] = useState(\"\");\n  const [ stories, changeStories ] = useState([]);\n  const [ storyAdded, changeStoryAdded ] = useState(false);\n  const [ loading, changeLoading ] = useState(true);\n  const { user } = useContext(AuthenticatedContext);\n\n  const handleSubmit = async e => {\n    if (user) {\n      e.preventDefault();\n      const storiesRef = await db.collection('stories').doc(titleRef).get(); // Fetch the data for storiesref\n      if (!storiesRef.exists) { \n        await db.collection('stories').doc(titleRef).set({\n          title: titleRef,\n          text: textRef,\n          posts: []\n        });\n        changeStoryAdded(true);\n        console.log(\"Add successful!\");\n      } else { // If there is an existing story with the same name\n        changeAlert(\"There is already a story with that title\");\n      }\n    } else history.push('/signup');\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const storyRef = db.collection('stories');\n      const storyData = await storyRef.get();\n      const newStories = [];\n      // If the stories database has existing stories\n      if (!storyData.empty) {\n        storyData.forEach(story => {\n          const {text, title} = story.data();\n          newStories.push(\n            <Col key={title}>\n              <Card className={classes.storyCard}>\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                  {text.length < 165 ? text : `${text.slice(0, 165)}...`}\n                </Card.Text>\n                <Button variant=\"primary\"><Link className={classes.titleLink} to={`/stories/${title}`}>Visit this story</Link></Button>\n              </Card.Body>\n              </Card>\n          </Col>\n          )\n        });\n        changeStoryAdded(false);\n        changeStories(newStories);\n      } else { // If there are no existing stories\n        changeStories(<h1 style={{margin: \"4rem\"}}>There are no stories yet!</h1>)\n      }\n     \n      changeLoading(false);\n    };\n    fetchData();\n  }, [storyAdded]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n    {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n    <Container className={classes.container} fluid>\n      <Row>\n      {loading ? \n        <Spinner/>\n        :\n        stories}\n      </Row>\n    </Container>\n  \n  \n  <Card>\n    <Card.Body>\n        <h2 className=\"text-center mb-4\">Add new story</h2>\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label>Title</Form.Label>\n                <Form.Control value={titleRef} onChange={changeTitleRef} required />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Beginning text</Form.Label>\n                <Form.Control value={textRef} onChange={changeTextRef} required />\n            </Form.Group>\n            <Button className=\"w-100\" type=\"submit\">Add story</Button>\n        </Form>\n    </Card.Body>\n </Card>\n  </>\n  )\n};\n\nexport default withStyles(styles)(Home);","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js",[],"/Volumes/NEO Storage/storytime/src/components/App.js",[],"/Volumes/NEO Storage/storytime/src/hooks/useForm.js",[],"/Volumes/NEO Storage/storytime/src/components/AppNav.js",[],"/Volumes/NEO Storage/storytime/src/components/Error.js",[],"/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js",[],"/Volumes/NEO Storage/storytime/src/components/Login.js",["80"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase/Firebase';\nimport { Card, Button, Form, Alert, Container } from 'react-bootstrap';\nimport useForm from '../hooks/useForm';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\n\nexport default function Signin() {\n    const [emailRef, changeEmailRef] = useForm(\"\");\n    const [passwordRef, changePasswordRef] = useForm(\"\");\n    const {user, updateUser} = useContext(AuthenticatedContext);\n    const [alert, changeAlert] = useState(\"\");\n    const history = useHistory();\n    const handleClick = e => {\n        e.preventDefault();\n            auth.signInWithEmailAndPassword(emailRef, passwordRef).then(() => {\n                const currentUser = auth.currentUser;\n                updateUser(currentUser);\n                history.push('/');\n                console.log(\"Successfully signed back in\");\n            }).catch(() => {\n                changeAlert(\"Invalid password\")\n            });   \n\n    };\n\n    // Used to prevent signed in user from accessing this page\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [user]);\n\n    return (\n        <Container style={{maxWidth: \"70vh\", marginTop: \"4rem\"}}>\n         {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log in</h2>\n                    <Form onSubmit={handleClick}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control value={emailRef} onChange={changeEmailRef} type=\"email\" required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control value={passwordRef} onChange={changePasswordRef} type=\"password\" required />\n                        </Form.Group>\n                        <Button className=\"w-100\" type=\"submit\">Log in</Button>\n                        <Form.Group style={{marginTop: \"2rem\", textAlign: \"center\" }}>\n                            <Form.Label>Don't have an account? <Link to=\"/signup\">Sign up</Link></Form.Label>\n                        </Form.Group>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n            </div>\n        </Container>\n    )\n}\n","/Volumes/NEO Storage/storytime/src/components/Signup.js",["81"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Button, Form, Alert, Container } from 'react-bootstrap';\nimport useForm from '../hooks/useForm';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport { db, storage, auth } from '../firebase/Firebase';\n\nexport default function Signin() {\n    const [ emailRef, changeEmailRef ] = useForm(\"\");\n    const [ passwordRef, changePasswordRef ] = useForm(\"\");\n    const [ passwordConfirmationRef, changePasswordConfirmationRef ] = useForm(\"\");\n    const [ displayNameRef, changeDisplayNameRef ] = useForm(\"\");\n    const [ profilePictureRef, changeProfilePictureRef ] = useState(\"\");\n    const { user, updateUser } = useContext(AuthenticatedContext);\n    const [ alert, changeAlert ] = useState(\"\");\n    const history = useHistory();\n\n       // Used to prevent signed in user from accessing this page\n       useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [user]);\n\n    // Checks whether the password and password confirmation match\n    const checkPassword = () => {\n        if (passwordRef === passwordConfirmationRef) {\n            return true;\n        } else return false;\n    }\n\n    // Checks to see if the display name already exists within the database\n    const checkName = async () => {\n        const nameRef = db.collection('users').doc(displayNameRef);\n        const doc = await nameRef.get();\n            \n        return doc.exists;\n    }\n\n    const addUser = async () => {\n        // Add profile picture to google cloud storage\n        await storage.ref(`/images/${displayNameRef}`).put(profilePictureRef).then(async () => {\n            await storage.ref('images').child(displayNameRef).getDownloadURL().then(async (url) => {\n                   // Add to Firebase Authentication\n                    await auth.createUserWithEmailAndPassword(emailRef, passwordRef).then(async () => {\n                        const currentUser = auth.currentUser;\n                        await currentUser.updateProfile({\n                            displayName: displayNameRef,\n                            photoURL: url\n                        }).catch(err => {throw new Error(err)});\n                        const userData = {\n                            email: emailRef,\n                            displayName: displayNameRef, \n                            photoURL: url,\n                            password: passwordRef,\n                            bio: \"This is where your bio would be!\"\n                        };     \n                        await db.collection('users').doc(displayNameRef).set(userData).catch(err => console.log(err));\n                        updateUser(userData); // Sets the Context of the user to the currently signed in user\n\n                        history.push('/');\n                        console.log(\"Account successfully created!\");\n                    }).catch(() => changeAlert(\"That email is already being used\"));\n                        }).catch(err => console.log(err));\n        }).catch(err => console.log(err));\n     \n    }\n\n    const validateAndAdd = () => {\n        if (checkPassword()) {\n            checkName().then(val => {\n                if (!val) { // If the display name hasn't already been taken\n                    addUser();\n                } else changeAlert(\"That display name has been taken\")\n            });\n        } else {\n            changeAlert(\"Passwords don't match\");\n        } \n    }\n\n    const handleClick = e => {\n        e.preventDefault();\n        validateAndAdd();\n    };\n\n    const handleChange = e => {\n        changeProfilePictureRef(e.target.files[0]);\n    };\n\n    return (\n        <Container style={{maxWidth: \"70vh\", marginTop: \"4rem\"}}>\n        {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    <Form onSubmit={handleClick}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control value={emailRef} onChange={changeEmailRef} type=\"email\" required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control value={passwordRef} onChange={changePasswordRef} type=\"password\" required />\n                        </Form.Group>\n                        <Form.Group id=\"passwordConfirm\">\n                            <Form.Label>Password confirmation</Form.Label>\n                            <Form.Control value={passwordConfirmationRef} onChange={changePasswordConfirmationRef} type=\"password\" required />\n                        </Form.Group>\n                        <Form.Group id=\"displayName\">\n                            <Form.Label>Display Name</Form.Label>\n                            <Form.Control maxLength=\"12\" value={displayNameRef} onChange={changeDisplayNameRef} type=\"text\" required />\n                        </Form.Group>\n                        <Form.Group id=\"profilePictureRef\">\n                            <Form.Label>Profile Picture</Form.Label>\n                            <Form.Control onChange={handleChange} type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" required />\n                        </Form.Group>\n                        <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\n                        <Form.Group style={{marginTop: \"2rem\", textAlign: \"center\" }}>\n                            <Form.Label>Already have an account? <Link to=\"/login\">Log in</Link></Form.Label>\n                        </Form.Group>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n            </div>\n        </Container>\n    )\n}\n","/Volumes/NEO Storage/storytime/src/components/Story.js",[],"/Volumes/NEO Storage/storytime/src/components/Post.js",["82","83"],"import \"firebase/firestore\";\nimport { useContext, useState } from \"react\";\nimport { withStyles } from '@material-ui/core';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { db } from \"../firebase/Firebase\";\nimport { AuthenticatedContext } from \"../contexts/AuthenticatedContext\";\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        width: \"100%\",\n        height: \"8rem\",\n        margin: \"0.7rem 0\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        webkitBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        mozBoxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\",\n        boxShadow: \"7px 7px 63px -28px rgba(0,0,0,0.37)\"\n    },\n    user: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"25%\",\n        margin: \"1rem auto 0 0\"\n    },\n    image: {\n        width: \"5.5rem\", \n        height: \"5rem\"\n    },\n    text: {\n        fontSize: \"1.5rem\",\n        width: \"100%\"\n    },\n    arrow: {\n        display: \"flex\",\n        margin: \"0 0.5rem\",\n        fontSize: \"1.5rem\",\n    },\n    arrowContainer: {\n        marginLeft: \"8rem\",\n        display: \"flex\"\n    },\n    '@media (max-width: 1024px)': {\n        text: {\n            fontSize: \"0.84rem\"\n        },\n        arrowContainer: {\n            marginLeft: \"0\"\n        }\n}\n}\n\nfunction Post(props) {\n    const { classes, text, votes, title, toggleVotes, changeAlert } = props;\n    const { photoURL, username } = props.owner;\n    const { user } = useContext(AuthenticatedContext);\n    const { voteColor, changeVoteColor } = useState('gray');\n    const history = useHistory();\n\n    // Function to handle a user that has already voted, returns an object with voted and addToVote values\n    const handleExistingVoter = (currentVoter, voteValue) => {\n        if (currentVoter.voted === 1) { // \n            if (voteValue === 1) {  // voteValue represents the user clicking either up or down\n                changeAlert(\"You can't vote more than once\");\n                return {voted: 1, addToVote: 0}\n            } else if (voteValue === -1) { // Negative vote\n                return {voted: 0, addToVote: -1};\n            }\n        } else if (currentVoter.voted === -1) {\n            if (voteValue === -1 ) {\n                changeAlert(\"You can't vote more than once\");\n                return { voted: -1, addToVote: 0 };\n            } else if (voteValue === 1) {\n                return {voted: 0, addToVote: 1};\n            }\n        } else {\n            return {voted: voteValue, addToVote: voteValue}\n        }\n    }\n\n    const handleVote = async (voteValue) => {\n      if (!user) {\n        history.push(\"/signup\");\n      } else {\n        const storyTitle = db.collection(\"stories\").doc(title);\n\n        const storyData = await storyTitle.get();\n        \n        const votePost = storyData.data().posts.find((post) => {\n          //Returns the post that is being voted on\n          return post.owner.username === username;\n        });\n\n        //This new variable will be added to the voters array for this particular post\n        let newVoter = {\n          name: user.displayName,\n          voted: voteValue, // Is either positive or negative\n        };\n\n           const updatedPosts = [];\n            storyData.data().posts.forEach((post) => {\n              // Cycle through the data returned from the stories posts, and modify the post being voted on\n              if (post.owner.username === votePost.owner.username) {\n                \n                const currentVoter = post.voters.find(voter => { // Get the voter information of the currently logged in user, returns \n                    return voter.name === user.displayName; // an object representing the voters existing vote info and undefined otherwise\n                })\n                \n                if (currentVoter) {\n                    const addToVote = handleExistingVoter(currentVoter, voteValue);\n                    let postWithUpdatedUserVotes = post.voters.map(voter => {\n                      if (voter.name === newVoter.name) {\n                        voter.voted = addToVote.voted;\n                      }\n                      return voter;\n                    })\n\n                     updatedPosts.push({\n                    ...votePost, // Returns the existing information of the post being voted on, such as text\n                    voters: postWithUpdatedUserVotes, // Returns the updated voters array\n                    votes: addToVote.addToVote + post.votes, // Returns the updated votes\n                });\n                } else {\n                     updatedPosts.push({\n                    ...votePost, // Returns the existing information of the post being voted on, such as text\n                    voters: [...post.voters, newVoter], // Returns the updated voters array\n                    votes: newVoter.voted + post.votes // Returns the updated votes\n                });\n                }\n\n               \n              } else updatedPosts.push(post);\n              \n            });\n            const updatedStory = {\n              ...storyData.data(),\n              posts: updatedPosts,\n            };\n\n            await storyTitle.set(updatedStory);\n            \n            toggleVotes();\n        }\n      \n    };\n\n    return (\n      <Row className={classes.container}>\n        <Col>\n          <div className={classes.user}>\n            <img alt=\"user profile pic\" className={classes.image} src={photoURL} />\n            <Link to={`/users/${username}`}>\n              <h4 style={{ fontSize: \"0.7rem\" }}>{username}</h4>\n            </Link>\n          </div>\n        </Col>\n        <Col>\n          <h4 className={classes.text}>{text}</h4>\n        </Col>\n        <Col>\n          <div className={classes.arrowContainer}>\n            <i\n                onClick={() => handleVote(1)}\n                className={`fas fa-arrow-up ${classes.arrow}`}\n            ></i>\n            {votes}\n            <i\n              onClick={() => handleVote(-1)}\n              className={`fas fa-arrow-down ${classes.arrow}`}\n            ></i>\n          </div>\n        </Col>\n      </Row>\n    );\n}\n\nexport default withStyles(styles)(Post);","/Volumes/NEO Storage/storytime/src/components/Spinner.js",[],"/Volumes/NEO Storage/storytime/src/components/User.js",["84"],"import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { db } from \"../firebase/Firebase\";\nimport Spinner from './Spinner';\nimport UserDisplay from './UserDisplay';\n\nfunction User(props) {\n    const { user } = props.match.params;\n    const history = useHistory();\n    const [ userData, changeUserData ] = useState(null);\n    const [ pageLoaded, changePageLoaded ] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const userInfoRef = db.collection('users').doc(user);\n            const userInfo = await userInfoRef.get();\n            if (userInfo.exists) {\n                changeUserData(userInfo.data());\n            } else history.push('/error');\n        };\n        fetchData();\n        changePageLoaded(true);\n    }, []); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    return (\n        <div>\n            {pageLoaded ? \n            <UserDisplay {...userData}/>\n            :\n            <Spinner />\n        }\n            \n        </div>\n    )\n}\n\nexport default User;","/Volumes/NEO Storage/storytime/src/components/UserDisplay.js",[],"/Volumes/NEO Storage/storytime/src/components/EditUser.js",["85","86"],"import { useState, useEffect, useContext } from 'react';\nimport { db, storage } from '../firebase/Firebase';\nimport { withStyles } from '@material-ui/core';\nimport { Form, Container, Button, Alert, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Spinner from './Spinner';\nimport useForm from '../hooks/useForm';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport { UpdatedUserContext } from \"../contexts/UpdatedUserContext\";\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        textAlign: \"center\"\n    },\n    bio: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    profilePicture: {\n        width: \"50%\",\n        height: \"50%\"\n    },\n    imageSubmit: {\n        width: \"25%\",\n        margin: \"1rem auto\"\n    },\n    spinner: {\n        display: \"flex\",\n        margin: \"auto\"\n    },\n    row: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    button: {\n        color: \"white\",\n        textDecoration: \"none\"\n    }\n};\n\nfunction EditUser(props) {\n    const { classes } = props;\n    const history = useHistory();\n    const { user: pageUser } = props.match.params;\n    const [ profilePictureRef, changeProfilePictureRef ] = useState(\"\");\n    const [ bioRef, changeBioRef, initialBioRef ] = useForm(\"\");\n    const [ displayNameRef, changeDisplayNameRef ] = useState(\"\");\n    const [ displayImageRef, changeDisplayImageRef ] = useState(\"\");\n    const [ pageLoaded, changePageLoaded ] = useState(false);\n    const { user } = useContext(AuthenticatedContext);\n    const { userUpdated } = useContext(UpdatedUserContext);\n    const [ alert, changeAlert ] = useState(\"\");\n\n    const handleChange = e => {\n        const image = e.target.files[0];\n        changeProfilePictureRef(image);\n        changeDisplayImageRef(URL.createObjectURL(image));\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const userData = await db.collection('users').doc(pageUser).get();\n            const { displayName, photoURL, bio } = userData.data();\n            changeDisplayImageRef(() => photoURL);\n            changeDisplayNameRef(() => displayName);\n            initialBioRef(() => bio);\n            if (!user || user.displayName !== displayName) {\n                history.push('/error');\n            } else {\n                changePageLoaded(true);\n            }\n            } \n        fetchData();\n    }, [user]);\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      if (profilePictureRef) {\n        // If profile picture is going to be changed\n        storage\n          .ref(\"images\")\n          .child(user.displayName)\n          .delete()\n          .then(() => {\n            storage\n              .ref(`/images/${user.displayName}`)\n              .put(profilePictureRef)\n              .then(() => {\n                storage\n                  .ref(\"images\")\n                  .child(user.displayName)\n                  .getDownloadURL()\n                  .then((url) => {\n                    db.collection(\"users\")\n                      .doc(user.displayName)\n                      .set(\n                        {\n                          bio: bioRef,\n                          photoURL: url || user.photoURL,\n                        },\n                        { merge: true }\n                      );\n                    userUpdated();\n                    changeAlert(\"Successfully updated!\");\n                  });\n              })\n              .catch((err) => console.log(err));\n          })\n          .catch((err) => {\n            console.log(\"Error deleting picture\", err);\n          });\n      } else {\n          db.collection(\"users\")\n            .doc(user.displayName)\n            .set(\n              {\n                bio: bioRef,\n              },\n              { merge: true }\n            );\n          changeAlert(\"Successfully updated!\");\n      }\n    };\n        \n\n    return (\n      <>\n        {alert ? (\n          <Alert onClick={() => changeAlert(\"\")} variant=\"success\">\n            <Alert.Heading>{alert}</Alert.Heading>\n          </Alert>\n        ) : null}\n        <Container className={classes.container}>\n          {!pageLoaded ? (\n            <Row className={classes.row}>\n              <Spinner className={classes.spinner} />\n            </Row>\n          ) : (\n            <Form onSubmit={handleSubmit}>\n              <h1>{displayNameRef}</h1>\n              <img className={classes.profilePicture} src={displayImageRef} />\n              <Form.Group>\n                <Row>\n                  <Form.Control\n                    className={classes.imageSubmit}\n                    onChange={handleChange}\n                    type=\"file\"\n                    accept=\"image/png, image/jpeg, image/jpg\"\n                  />\n                </Row>\n              </Form.Group>\n              <Form.Group className={classes.bio}>\n                <Form.Label>Bio</Form.Label>\n                <textarea\n                  value={bioRef}\n                  onChange={changeBioRef}\n                  type=\"text\"\n                />\n              </Form.Group>\n              <Button type=\"submit\" >\n                  Submit\n              </Button>\n            </Form>\n          )}\n        </Container>\n      </>\n    );\n}\n\nexport default withStyles(styles)(EditUser);","/Volumes/NEO Storage/storytime/src/contexts/UpdatedUserContext.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":86,"column":6,"nodeType":"93","endLine":86,"endColumn":18,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":33,"column":8,"nodeType":"93","endLine":33,"endColumn":14,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"95","line":24,"column":8,"nodeType":"93","endLine":24,"endColumn":14,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":60,"column":13,"nodeType":"100","messageId":"101","endLine":60,"endColumn":22},{"ruleId":"98","severity":1,"message":"102","line":60,"column":24,"nodeType":"100","messageId":"101","endLine":60,"endColumn":39},{"ruleId":"91","severity":1,"message":"103","line":23,"column":8,"nodeType":"93","endLine":23,"endColumn":10,"suggestions":"104"},{"ruleId":"91","severity":1,"message":"105","line":79,"column":8,"nodeType":"93","endLine":79,"endColumn":14,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":146,"column":15,"nodeType":"109","endLine":146,"endColumn":79},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.storyCard' and 'classes.titleLink'. Either include them or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["113"],["114"],"no-unused-vars","'voteColor' is assigned a value but never used.","Identifier","unusedVar","'changeVoteColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["115"],"React Hook useEffect has missing dependencies: 'history', 'initialBioRef', and 'pageUser'. Either include them or remove the dependency array.",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"119","fix":"121"},{"desc":"119","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [classes.storyCard, classes.titleLink, storyAdded]",{"range":"125","text":"126"},"Update the dependencies array to be: [history, user]",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},"Update the dependencies array to be: [history, initialBioRef, pageUser, user]",{"range":"131","text":"132"},[2884,2896],"[classes.storyCard, classes.titleLink, storyAdded]",[1260,1266],"[history, user]",[1077,1083],[808,810],[2548,2554],"[history, initialBioRef, pageUser, user]"]