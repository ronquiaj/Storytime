[{"/Volumes/NEO Storage/storytime/src/index.js":"1","/Volumes/NEO Storage/storytime/src/components/Home.js":"2","/Volumes/NEO Storage/storytime/src/firebase/Firebase.js":"3","/Volumes/NEO Storage/storytime/src/components/App.js":"4","/Volumes/NEO Storage/storytime/src/hooks/useForm.js":"5","/Volumes/NEO Storage/storytime/src/components/AppNav.js":"6","/Volumes/NEO Storage/storytime/src/components/Error.js":"7","/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js":"8","/Volumes/NEO Storage/storytime/src/components/Login.js":"9","/Volumes/NEO Storage/storytime/src/components/Signup.js":"10","/Volumes/NEO Storage/storytime/src/components/Story.js":"11"},{"size":348,"mtime":1608348905480,"results":"12","hashOfConfig":"13"},{"size":3093,"mtime":1608840988190,"results":"14","hashOfConfig":"13"},{"size":639,"mtime":1608768084530,"results":"15","hashOfConfig":"13"},{"size":876,"mtime":1608841110600,"results":"16","hashOfConfig":"13"},{"size":288,"mtime":1608837770610,"results":"17","hashOfConfig":"13"},{"size":1781,"mtime":1608792318680,"results":"18","hashOfConfig":"13"},{"size":189,"mtime":1608403192620,"results":"19","hashOfConfig":"13"},{"size":664,"mtime":1608767565710,"results":"20","hashOfConfig":"13"},{"size":2409,"mtime":1608768911990,"results":"21","hashOfConfig":"13"},{"size":5098,"mtime":1608786717670,"results":"22","hashOfConfig":"13"},{"size":145,"mtime":1608841082200,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"y0gnho",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/NEO Storage/storytime/src/index.js",[],["50","51"],"/Volumes/NEO Storage/storytime/src/components/Home.js",["52"],"/Volumes/NEO Storage/storytime/src/firebase/Firebase.js",[],"/Volumes/NEO Storage/storytime/src/components/App.js",["53"],"/Volumes/NEO Storage/storytime/src/hooks/useForm.js",[],"/Volumes/NEO Storage/storytime/src/components/AppNav.js",["54"],"import { useContext } from 'react';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport { withStyles } from '@material-ui/core';\nimport { auth } from '../firebase/Firebase';\n\nconst styles = {\n    navLink: {\n        margin: '1rem'\n    }\n}\n\nfunction AppNav(props) {\n    const { user, updateUser } = useContext(AuthenticatedContext);\n    const { classes } = props;\n\n    const handleSignout = () => {\n        auth.signOut().then(() => {\n            updateUser(null);\n            console.log(\"Successfully signed out...\");\n        }).catch(err => {\n            console.log(`There was an error logging you out, ${err}`)\n        })\n    };\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>Storytime</Navbar.Brand>\n            <Navbar.Brand><img src={user && user.photoURL}/></Navbar.Brand>\n            <Nav className=\"mr-auto\">\n                <NavLink className={classes.navLink} to=\"/\">Home</NavLink>\n                {\n                    user ? <><Navbar.Brand>Welcome back, {user.displayName}</Navbar.Brand>  <Navbar.Brand onClick={handleSignout}>Sign Out</Navbar.Brand> </>: \n                    <>\n                        <NavLink className={classes.navLink} to=\"/signup\">Sign Up</NavLink> \n                        <NavLink className={classes.navLink} to=\"/login\">Log in</NavLink>\n                    </>\n                }\n            </Nav>\n            <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-info\">Search</Button>\n            </Form>\n        </Navbar>\n    )\n}\nexport default withStyles(styles)(AppNav);","/Volumes/NEO Storage/storytime/src/components/Error.js",[],"/Volumes/NEO Storage/storytime/src/contexts/AuthenticatedContext.js",[],"/Volumes/NEO Storage/storytime/src/components/Login.js",["55"],"import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase/Firebase';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport useForm from '../hooks/useForm';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\n\nexport default function Signin() {\n    const [emailRef, changeEmailRef] = useForm(\"\");\n    const [passwordRef, changePasswordRef] = useForm(\"\");\n    const {user, updateUser} = useContext(AuthenticatedContext);\n    const [alert, changeAlert] = useState(\"\");\n    const history = useHistory();\n    const handleClick = e => {\n        e.preventDefault();\n            auth.signInWithEmailAndPassword(emailRef, passwordRef).then(() => {\n                const currentUser = auth.currentUser;\n                updateUser(currentUser);\n                history.push('/');\n                console.log(\"Successfully signed back in\");\n            }).catch(() => {\n                changeAlert(\"Invalid password\")\n            });   \n\n    };\n\n    return (\n        <>\n         {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log in</h2>\n                    <Form onSubmit={handleClick}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control value={emailRef} onChange={changeEmailRef} type=\"email\" required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control value={passwordRef} onChange={changePasswordRef} type=\"password\" required />\n                        </Form.Group>\n                        <Button className=\"w-100\" type=\"submit\">Log in</Button>\n                        <Form.Group style={{marginTop: \"2rem\", textAlign: \"center\" }}>\n                            <Form.Label>Don't have an account? <Link to=\"/signup\">Sign up</Link></Form.Label>\n                        </Form.Group>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n            </div>\n        </>\n    )\n}\n","/Volumes/NEO Storage/storytime/src/components/Signup.js",["56","57"],"import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase/Firebase';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport useForm from '../hooks/useForm';\nimport { AuthenticatedContext } from '../contexts/AuthenticatedContext';\nimport { db, app } from '../firebase/Firebase';\n\nexport default function Signin() {\n    const [emailRef, changeEmailRef] = useForm(\"\");\n    const [passwordRef, changePasswordRef] = useForm(\"\");\n    const [passwordConfirmationRef, changePasswordConfirmationRef] = useForm(\"\");\n    const [displayNameRef, changeDisplayNameRef] = useForm(\"\");\n    const [profilePictureRef, changeProfilePictureRef] = useForm(\"\");\n    const {user, updateUser} = useContext(AuthenticatedContext);\n    const [alert, changeAlert] = useState(\"\");\n    const history = useHistory();\n\n    // Checks whether the password and password confirmation match\n    const checkPassword = () => {\n        if (passwordRef === passwordConfirmationRef) {\n            return true;\n        } else return false;\n    }\n\n    // Checks to see if the display name already exists within the database\n    const checkName = async () => {\n        const nameRef = db.collection('users').doc(displayNameRef);\n        const doc = await nameRef.get();\n            \n        return doc.exists;\n    }\n\n    const addUser = async () => {\n        // Add to Firebase Authentication\n            await auth.createUserWithEmailAndPassword(emailRef, passwordRef).then(async () => {\n                const currentUser = auth.currentUser;\n                await currentUser.updateProfile({\n                    displayName: displayNameRef,\n                    photoURL: profilePictureRef\n                });\n    \n                const userData = {\n                    email: emailRef,\n                    displayName: displayNameRef, \n                    profilePicture: profilePictureRef,\n                    password: passwordRef\n                };\n    \n                updateUser(userData); // Sets the Context of the user to the currently signed in user\n                await db.collection('users').doc(displayNameRef).set(userData);\n                history.push('/');\n                console.log(\"Account successfully created!\");\n            }).catch(() => changeAlert(\"That email is already being used\"));\n    }\n\n    const validateAndAdd = () => {\n        if (checkPassword()) {\n            checkName().then(val => {\n                if (!val) { // If the display name hasn't already been taken\n                    addUser();\n                } else changeAlert(\"That display name has been taken\")\n            });\n        } else {\n            changeAlert(\"Passwords don't match\");\n        } \n    }\n\n    const handleClick = e => {\n        e.preventDefault();\n        validateAndAdd();\n    };\n\n    return (\n        <>\n        {alert ? <Alert onClick={() => changeAlert(\"\")} variant=\"danger\"><Alert.Heading>{alert}</Alert.Heading></Alert> : null}\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    <Form onSubmit={handleClick}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control value={emailRef} onChange={changeEmailRef} type=\"email\" required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control value={passwordRef} onChange={changePasswordRef} type=\"password\" required />\n                        </Form.Group>\n                        <Form.Group id=\"passwordConfirm\">\n                            <Form.Label>Password confirmation</Form.Label>\n                            <Form.Control value={passwordConfirmationRef} onChange={changePasswordConfirmationRef} type=\"password\" required />\n                        </Form.Group>\n                        <Form.Group id=\"displayName\">\n                            <Form.Label>Display Name</Form.Label>\n                            <Form.Control value={displayNameRef} onChange={changeDisplayNameRef} type=\"text\" required />\n                        </Form.Group>\n                        <Form.Group id=\"profilePictureRef\">\n                            <Form.Label>Profile Picture URL</Form.Label>\n                            <Form.Control value={profilePictureRef} onChange={changeProfilePictureRef} type=\"text\" required />\n                        </Form.Group>\n                        <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\n                        <Form.Group style={{marginTop: \"2rem\", textAlign: \"center\" }}>\n                            <Form.Label>Already have an account? <Link to=\"/login\">Log in</Link></Form.Label>\n                        </Form.Group>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n            </div>\n        </>\n    )\n}\n","/Volumes/NEO Storage/storytime/src/components/Story.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":74,"column":6,"nodeType":"64","endLine":74,"endColumn":18,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":30,"column":27,"nodeType":"72","endLine":30,"endColumn":61},{"ruleId":"66","severity":1,"message":"73","line":12,"column":12,"nodeType":"68","messageId":"69","endLine":12,"endColumn":16},{"ruleId":"66","severity":1,"message":"74","line":8,"column":14,"nodeType":"68","messageId":"69","endLine":8,"endColumn":17},{"ruleId":"66","severity":1,"message":"73","line":16,"column":12,"nodeType":"68","messageId":"69","endLine":16,"endColumn":16},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.storyCard' and 'classes.titleLink'. Either include them or remove the dependency array.","ArrayExpression",["77"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","'app' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [classes.storyCard, classes.titleLink, storyAdded]",{"range":"80","text":"81"},[2151,2163],"[classes.storyCard, classes.titleLink, storyAdded]"]